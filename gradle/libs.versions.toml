[versions]
kotlin = "2.0.0"
kotlinxCoroutines = "1.8.0"
kotlinxDatetime = "0.6.0"
kotlinxSerialization = "1.6.2"

# Note that the compose version must match the one expected by the routingCompose version, otherwise we risk
# getting a javascript error and blank screen.
# See the routing compose release notes for dependency details: https://github.com/hfhbd/routing-compose/releases
compose = "1.6.11"
routingCompose = "0.2.14"

googleMaps = "0.3.3-alpha"

ksp = "2.0.0-1.0.22"
ktor = "2.3.11"
shadow = "8.1.1"

# https://github.com/jeremymailen/kotlinter-gradle/releases
kotlinterGradle = "4.4.0"

koin = "3.5.3"
slf4j = "2.0.12"
log4j2 = "2.22.1"
kermit = "2.0.3"
jansi = "2.4.1"
solarPositioning = "2.0.2"
junit = "5.10.2"
mockito = "5.2.0"

[libraries]
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinx-serialisation-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
routing-compose = { module = "app.softwork:routing-compose", version.ref = "routingCompose" }
google-maps = { module = "com.github.chihsuanwu:google-maps-compose-web", version.ref = "googleMaps" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-request-validation = { module = "io.ktor:ktor-server-request-validation", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-caching-headers = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
# koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }

mockito = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
junit = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j2" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j2" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j2" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
jansi = { module = "org.fusesource.jansi:jansi", version.ref = "jansi" }
solar-positioning = { module = "net.e175.klaus:solarpositioning", version.ref = "solarPositioning" }

[plugins]
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
johnrengelman-shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinterGradle" }
